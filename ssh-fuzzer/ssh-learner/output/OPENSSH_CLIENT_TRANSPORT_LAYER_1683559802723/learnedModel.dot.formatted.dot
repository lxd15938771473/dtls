digraph g {
s0 [label="s0", shape="circle"];
s1 [label="s1", shape="circle"];
s2 [label="s2", shape="circle"];
s3 [label="s3", shape="circle"];
s4 [label="s4", shape="circle"];
s5 [label="s5", shape="circle"];
s6 [label="s6", shape="circle"];
s7 [label="s7", shape="circle"];
s8 [label="s8", shape="circle"];
s9 [label="s9", shape="circle"];
s10 [label="s10", shape="circle"];
s0 -> s1  [label="KEXINIT / KEXINIT+KEX30"];
s0 -> s6  [label="KEX31 / KEXINIT+UNIMPL"];
s0 -> s2  [label="NEWKEYS / KEXINIT+UNIMPL
SR_ACCEPT / KEXINIT+UNIMPL"];
s1 -> s5  [label="KEXINIT / NO_CONN"];
s1 -> s3  [label="KEX31 / NEWKEYS"];
s1 -> s1  [label="NEWKEYS / UNIMPL
SR_ACCEPT / UNIMPL"];
s2 -> s1  [label="KEXINIT / KEX30"];
s2 -> s6  [label="KEX31 / UNIMPL"];
s2 -> s2  [label="NEWKEYS / UNIMPL
SR_ACCEPT / UNIMPL"];
s3 -> s9  [label="KEXINIT / UNIMPL"];
s3 -> s3  [label="KEX31 / UNIMPL
SR_ACCEPT / UNIMPL"];
s3 -> s4  [label="NEWKEYS / SR_REQUEST"];
s4 -> s5  [label="KEXINIT / NO_CONN
KEX31 / NO_CONN
NEWKEYS / NO_CONN"];
s4 -> s4  [label="SR_ACCEPT / UA_REQUEST"];
s5 -> s5  [label="KEXINIT / NO_CONN
KEX31 / NO_CONN
NEWKEYS / NO_CONN
SR_ACCEPT / NO_CONN"];
s6 -> s7  [label="KEXINIT / KEX30"];
s6 -> s6  [label="KEX31 / UNIMPL
SR_ACCEPT / UNIMPL"];
s6 -> s5  [label="NEWKEYS / UNIMPL"];
s7 -> s5  [label="KEXINIT / NO_CONN
NEWKEYS / UNIMPL"];
s7 -> s8  [label="KEX31 / NEWKEYS"];
s7 -> s7  [label="SR_ACCEPT / UNIMPL"];
s8 -> s8  [label="KEXINIT / NO_RESP
KEX31 / NO_RESP
SR_ACCEPT / NO_RESP"];
s8 -> s5  [label="NEWKEYS / NO_RESP"];
s9 -> s9  [label="KEXINIT / UNIMPL
SR_ACCEPT / UNIMPL"];
s9 -> s10  [label="KEX31 / UNIMPL"];
s9 -> s4  [label="NEWKEYS / SR_REQUEST"];
s10 -> s10  [label="KEXINIT / UNIMPL
KEX31 / UNIMPL
SR_ACCEPT / UNIMPL"];
s10 -> s5  [label="NEWKEYS / SR_REQUEST"];
__start0 [height="0", label="", shape="none", width="0"];
__start0 -> s0;
"\n\n";
}
